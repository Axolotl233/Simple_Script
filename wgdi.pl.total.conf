[alignment]
gff1 =  gff1 file
gff2 =  gff2 file
lens1 = lens1 file
lens2 = lens2 file
genome1_name =  Genome1 name
genome2_name =  Genome2 name
markersize = 0.5
ks_area = -1,3
position = order
colors = red,blue,green
figsize = 10,10
savefile = savefile(.csv)
savefig= save image(.png, .pdf, .svg)
blockinfo = block information file (.csv)
blockinfo_reverse = false
classid =  class1[alignmenttrees]
alignment = alignment file (.csv)
gff = gff file (reference genome, If alignment has no reference species, delete it)
lens = lens file (If alignment has no reference species, delete it)
dir = output folder
sequence_file = sequence file (.fa)
cds_file = cds file (.fa)
codon_positon = 1,2,3  (1,2 mean codon1&2; 1,2,3 mean no codon removed)
trees_file =  trees (.nwk)
align_software = (mafft,muscle)
tree_software =  (iqtree,fasttree)
model = MFP
trimming =  (trimal,divvier)
minimum = 4
delete_detail = true
[ancestral_karyotype]
gff = gff file (cat the relevant 'gff' files into a file)
pep_file = pep file (cat the relevant 'pep.fa' files into a file)
ancestor = ancestor file  (this file requires you to provide)
mark = aak 
ancestor_gff =  result file
ancestor_lens =  result file
ancestor_pep =  result file
ancestor_file =  result file[ancestral_karyotype_repertoire]
blockinfo =  block information (*.csv)
# blockinfo: processed *.csv
blockinfo_reverse =  False
gff1 =  gff1 file (ancestor's gff)
gff2 =  gff2 file (the other species's gff)
gap = 5
mark = aak1s
ancestor = ancestor file 
#current ancestor file
ancestor_new =  result file
ancestor_pep =  ancestor pep file 
#cat all pep files together
ancestor_pep_new =  result file
ancestor_gff =  result file
ancestor_lens =  result file
[blockinfo]
blast = blast file
gff1 =  gff1 file
gff2 =  gff2 file
lens1 = lens1 file
lens2 = lens2 file
collinearity = collinearity file
score = 100
evalue = 1e-5
repeat_number = 20
position = order
ks = ks file
ks_col = ks_NG86
savefile = block information (*.csv)
[blockks]
lens1 = lens1 file
lens2 = lens2 file
genome1_name =  Genome1 name
genome2_name =  Genome2 name
blockinfo = block information (*.csv)
pvalue = 0.2
tandem = true
tandem_length = 200
markersize = 1
area = 0,2
block_length =  minimum length
figsize = 8,8
savefig = save image(.png, .pdf, .svg)
[circos]
gff =  gff file
lens =  lens file
radius = 0.2
angle_gap = 0.05
ring_width = 0.015
colors  = 1:c,2:m,3:blue,4:gold,5:red,6:lawngreen,7:darkgreen,8:k,9:darkred,10:gray
alignment = alignment file 
chr_label = chr
ancestor = ancestor alignment file 
ancestor_location = ancestor file 
figsize = 10,10
label_size = 9
position = order
legend_square = 0.04, 0.04
column_names = 1,2,3,4,5
savefig = result(.png, .pdf, .svg)
[collinearity]
gff1 = gff1 file
gff2 = gff2 file
lens1 = lens1 file
lens2 = lens2 file
blast = blast file
blast_reverse = false
multiple  = 1
process = 8
evalue = 1e-5
score = 100
grading = 50,40,25
mg = 25,25
pvalue = 1
repeat_number = 10
positon = order
savefile = collinearity file
[correspondence]
blockinfo =  blockinfo file(.csv) 
lens1 = lens1 file
lens2 = lens2 file
tandem = true
tandem_length = 200
pvalue = 0.2
block_length = 5
tandem_ratio = 0.5
multiple  = 1
homo = -1,1
savefile = savefile(.csv)
[dotplot]
blast = blast file
gff1 =  gff1 file
gff2 =  gff2 file
lens1 = lens1 file
lens2 = lens2 file
genome1_name =  Genome1 name
genome2_name =  Genome2 name
multiple  = 1
score = 100
evalue = 1e-5
repeat_number = 10
position = order
blast_reverse = false
ancestor_left = ancestor file or none
ancestor_top = ancestor file or none
markersize = 0.5
figsize = 10,10
savefig = savefile(.png, .pdf, .svg)
[karyotype]
ancestor = ancestor chromosome file
width = 0.5
figsize = 10,6.18
savefig = save image(.png, .pdf, .svg)[karyotype_mapping]
blast = blast file
blast_reverse = false
gff1 = gff1 file
gff2 = gff2 file 
score = 100
evalue = 1e-5
repeat_number = 5
ancestor_left = ancestor location file (Only one of ('left', 'top') can be reserved)
ancestor_top = ancestor location file
the_other_lens = the other lens file
blockinfo = block information (*.csv)
blockinfo_reverse = false
limit_length = 5
the_other_ancestor_file =  result file [ks]
cds_file = 	cds file 
#cat all cds files together
pep_file = 	pep file
#cat all pep files together
align_software = muscle
pairs_file = gene pairs file
ks_file = ks result[ksfigure]
ksfit = ksfit result(*.csv)
labelfontsize = 15
legendfontsize = 15
xlabel = none            
ylabel = none            
title = none
area = 0,2
figsize = 10,6.18
shadow = true (true/false)
savefig =  save image(.png, .pdf, .svg)
[kspeaks]
blockinfo = block information (*.csv)
pvalue = 0.2
tandem = true
block_length = int number
ks_area = 0,10
multiple  = 1
homo = 0,1
fontsize = 9
area = 0,3
figsize = 10,6.18
savefig = saving image(.png,.pdf)
savefile = ks medain savefile
[peaksfit]
blockinfo = block information (*.csv)
mode = median
bins_number = 200
ks_area = 0,10
fontsize = 9
area = 0,3
figsize = 10,6.18
shadow = true 
savefig = saving image(.png,.pdf,.svg)[pindex]
alignment = alignment file (.csv)
gff = gff file
lens =lens file
gap = 50
retention = 0.05
diff = 0.05
remove_delta = (true/false)
savefile = result file(.csv)
[polyploidy classification]
blockinfo = block information (*.csv)
ancestor_left = ancestor file
ancestor_top = ancestor file
classid = class1,class2
savefile = result file(.csv)[retain]
alignment = alignment file
gff = gff file
lens = lens file
colors = red,blue,green
refgenome = shorthand
figsize = 10,12
step = 50
ylabel = y label
savefile = retain file (result)
savefig = result(.png, .pdf, .svg)
